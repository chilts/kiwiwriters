%# --- ONCE -------------------------------------------------------------------
<%once>
    $CFG = {};
    Config::Simple->import_from('/etc/kiwiwriters/kiwiwriters.cfg', $CFG);
</%once>
%# --- INIT -------------------------------------------------------------------
<%init>
    # automatically destroy these when they go out of scope
    local *SESS;
    local *ZAAPT;

    $SESS = {};

    # connect to the database
    $DBH = DBI->connect(
        "dbi:Pg:dbname=$CFG->{db_name}",
        $CFG->{db_user},
        undef,
        { RaiseError => 1, AutoCommit => 1 }
    );

    # create the Zaapt model
    $ZAAPT = Zaapt->new({
        store => 'Pg',
        dbh => $DBH,
        map => {
            Profile   => 'KiwiWriters::Zaapt::Store::Pg::Profile',
            Challenge => 'KiwiWriters::Zaapt::Store::Pg::Challenge',
        },
    });

    # decide which set of headers to put on this page
    # (info from http://www.httpwatch.com/httpgallery/caching/
    # and http://www.httpwatch.com/httpgallery/headers/)
    if ( $m->request_comp()->attr('cache') ) {
        # Expires ???
        # 
    }
    else {
        # for HTTP 1.0 proxies/caches, add "Pragma: no-cache"

        # if the client allowed show a temporary page before requesting a new one, use
        # "Expires: -1"

        # if the client should _never_ even cache a page, let alone show one, use
        # "Cache-Control: no-cache"

        # $r->header_out('Expires', '-1');
        $r->no_cache(1); # sets "Pragma: no-cache" and "Cache-control: no-cache"

        # Note: Don't set Expires with $r->header_out if you use $r->no_cache,
        # because header_out() takes precedence.
    }

    $r->headers_out->add('X-Powered-By' => 'zaapt.org.nz');

    $m->call_next();
</%init>
%# ----------------------------------------------------------------------------
<%attr>
    cache => 1
</%attr>
%# --- FLAGS ------------------------------------------------------------------
<%flags>
    inherit => undef
</%flags>
%# --- END --------------------------------------------------------------------
